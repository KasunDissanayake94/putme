#include <ESP8266HTTPClient.h>
#include <ESP8266WiFi.h>
#include <SoftwareSerial.h> 

int switchPin = 0;
int LedPin1 = 16; //Red buld -- Garbage Bin Open
int LedPin2 = 5;  //Green Light -- Garbage Bin Closed
int switchValue;  //Get the input value of Digital Read

void setup() { 
  Serial.begin(115200); //Serial Connection
  pinMode(LedPin1, OUTPUT);
  pinMode(LedPin2, OUTPUT);
  pinMode(switchPin, INPUT_PULLUP);

  WiFi.begin("XXXXXX", "XXXXXX");   //WiFi connection
 
  while (WiFi.status() != WL_CONNECTED) {  //Wait for the WiFI connection completion
 
    delay(500);
    Serial.println("Waiting for connection");
 
  }
}

void loop() {
  // Read the switch value
  switchValue = digitalRead(switchPin);
  if(switchValue==0){ //Bin Close ----> Green
    digitalWrite(LedPin2,HIGH);
    digitalWrite(LedPin1,LOW);
  }else if(switchValue ==1){ //Bin Open ---> Red
    digitalWrite(LedPin2,LOW);
    digitalWrite(LedPin1,HIGH);
    delay(5000); //Check whether garbage input process or not
    switchValue = digitalRead(switchPin);
    if(switchValue==0){ //Bin Close ----> Green
    digitalWrite(LedPin2,HIGH);
    digitalWrite(LedPin1,LOW);
    }else{
      sendrequest();//Sending data to the server 
    }
        
  } 
   
}
void sendrequest(){
  Serial.println("Sending process started...");
 if(WiFi.status()== WL_CONNECTED){   //Check WiFi connection status
 
   HTTPClient http;    //Declare object of class HTTPClient
 
   http.begin("http://putme2018-001-site1.1tempurl.com/controller/esp-filled-request-handler.php?binNumber=1");      //Specify request destination
   http.addHeader("Content-Type", "text/plain");  //Specify content-type header
 
   int httpCode = http.POST("Message from ESP8266");   //Send the request
   String payload = http.getString();                  //Get the response payload
 
   Serial.println(httpCode);   //Print HTTP return code
   Serial.println(payload);    //Print request response payload
 
   http.end();  //Close connection
 
 }else{
 
    Serial.println("Error in WiFi connection");   
 
 }
 
  exit(0);
  //delay(30000);  //Send a request every 30 seconds

  
}
